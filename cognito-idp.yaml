---
AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This template creates Amazon Cognito resources for the guided exercise.

Parameters:
  RosaStackName:
    Description: >
      Name of the stack that deployed the AWS infrastructure
      for the ROSA cluster.
    Type: String
  ClusterDomain:
    Description: >
      DNS domain of the ROSA cluster. Run the
      "rosa describe cluster -c cs220yourname" command to retrieve that DNS
      domain. The domain is provided in the "DNS" attribute.
    Type: String

Resources:
  # Cognito user pool
  rCognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName:
        Fn::Join:
          - ""
          - - Fn::ImportValue:
                !Join [":", [!Ref RosaStackName, RosaClusterName]]
            - "-user-pool"
      AutoVerifiedAttributes:
        - email
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          TemporaryPasswordValidityDays: 365
      UserPoolTags:
        "redhattraining:course-sku": CS220-cognito
  # Create user pool Domain
  rCognitoUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    DependsOn: rCognitoUserPool
    Properties:
      Domain:
        Fn::ImportValue: !Join [":", [!Ref RosaStackName, RosaClusterName]]
      UserPoolId:
        Ref: rCognitoUserPool
  # Create users for Cognito
  rCognitoUserPoolUserAmelia:
    Type: AWS::Cognito::UserPoolUser
    DependsOn: rCognitoUserPool
    Properties:
      Username: amroy
      UserAttributes:
        - Name: preferred_username
          Value: amroy
        - Name: name
          Value: Amelia Roy
        - Name: email
          Value: amroy@cs220cluster
        - Name: email_verified
          Value: true
      UserPoolId:
        Ref: rCognitoUserPool
  rCognitoUserPoolUserSue:
    Type: AWS::Cognito::UserPoolUser
    DependsOn: rCognitoUserPool
    Properties:
      Username: smoody
      UserAttributes:
        - Name: preferred_username
          Value: smoody
        - Name: name
          Value: Sue Moody
        - Name: email
          Value: smoody@cs220cluster
        - Name: email_verified
          Value: true
      UserPoolId:
        Ref: rCognitoUserPool
  rCognitoUserPoolUserRoberto:
    Type: AWS::Cognito::UserPoolUser
    DependsOn: rCognitoUserPool
    Properties:
      Username: rruiz
      UserAttributes:
        - Name: preferred_username
          Value: rruiz
        - Name: name
          Value: Roberto Ruiz
        - Name: email
          Value: rruiz@cs220cluster
        - Name: email_verified
          Value: true
      UserPoolId:
        Ref: rCognitoUserPool
  # Create groups for Cognito
  rCongnitoUserPoolGroupManagers:
    Type: AWS::Cognito::UserPoolGroup
    DependsOn: rCognitoUserPool
    Properties:
      GroupName: managers
      Description: Group for Managers
      UserPoolId:
        Ref: rCognitoUserPool
  rCongnitoUserPoolGroupDevelopers:
    Type: AWS::Cognito::UserPoolGroup
    DependsOn: rCognitoUserPool
    Properties:
      GroupName: developers
      Description: Group for Developers
      UserPoolId:
        Ref: rCognitoUserPool
  rCongnitoUserPoolGroupOperations:
    Type: AWS::Cognito::UserPoolGroup
    DependsOn: rCognitoUserPool
    Properties:
      GroupName: operations
      Description: Group for Operations
      UserPoolId:
        Ref: rCognitoUserPool
  rCognitoUserToGroupManagers:
    Type: AWS::Cognito::UserPoolUserToGroupAttachment
    DependsOn:
      - rCognitoUserPool
      - rCongnitoUserPoolGroupManagers
    Properties:
      GroupName: managers
      Username: amroy
      UserPoolId:
        Ref: rCognitoUserPool
  rCognitoUserToGroupDevelopers:
    Type: AWS::Cognito::UserPoolUserToGroupAttachment
    DependsOn:
      - rCognitoUserPool
      - rCongnitoUserPoolGroupDevelopers
    Properties:
      GroupName: developers
      Username: smoody
      UserPoolId:
        Ref: rCognitoUserPool
  rCognitoUserToGroupOperations:
    Type: AWS::Cognito::UserPoolUserToGroupAttachment
    DependsOn:
      - rCognitoUserPool
      - rCongnitoUserPoolGroupOperations
    Properties:
      GroupName: operations
      Username: rruiz
      UserPoolId:
        Ref: rCognitoUserPool
  # Cognito user pool client
  rCognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    DependsOn:
      - rCognitoUserPool
    Properties:
      UserPoolId:
        Ref: rCognitoUserPool
      ClientName:
        Fn::Join:
          - ""
          - - Fn::ImportValue:
                !Join [":", [!Ref RosaStackName, RosaClusterName]]
            - "-user-pool-client"
      GenerateSecret: true
      SupportedIdentityProviders:
        - COGNITO
      CallbackURLs:
        - Fn::Join:
            - ""
            - - "https://oauth-openshift.apps."
              - !Ref ClusterDomain
              - "/oauth2callback/Cognito"
      LogoutURLs:
        - Fn::Join:
            - ""
            - - "https://console-openshift-console.apps."
              - !Ref ClusterDomain
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - email
        - openid
        - profile
        - aws.cognito.signin.user.admin
      AllowedOAuthFlows:
        - code

Outputs:
  oUserPoolId:
    Description: Pool ID
    Value:
      Ref: rCognitoUserPool
  oUserPoolClientId:
    Description: >
      Client ID. Use that ID for the --client-id option of the "rosa create idp"
      command.
    Value:
      Ref: rCognitoUserPoolClient
  oIssuerURL:
    Description: >
      Issuer URL. Use that URL for the --issuer-url option of the
      "rosa create idp" command.
    # https://cognito-idp.<AWS::Region>.amazonaws.com/<rCognitoUserPool>
    Value:
      Fn::Join:
        - "/"
        - - Fn::Join:
              - "."
              - - "https://cognito-idp"
                - !Ref "AWS::Region"
                - "amazonaws.com"
          - !Ref rCognitoUserPool
